{"version":3,"file":"react-detect-offline.cjs.development.js","sources":["../src/useConnection.ts","../src/Online.tsx","../src/Offline.tsx","../src/Detector.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst inBrowser = typeof navigator !== 'undefined'\n\n// these browsers don't fully support navigator.onLine, so we need to use a polling backup\nconst unsupportedUserAgentsPattern = /Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/\n\nexport interface PollingConfig {\n  enabled?: boolean\n  url?: string\n  interval?: number\n  timeout?: number\n}\n\nexport interface UseConnectionArgs {\n  polling?: PollingConfig | boolean\n}\n\nexport default function useConnection({ polling }: UseConnectionArgs = {}) {\n  const [online, setOnline] = useState(inBrowser && typeof navigator.onLine === 'boolean' ? navigator.onLine : true)\n\n  useEffect(() => {\n    const goOnline = () => {\n      setOnline(true)\n    }\n    const goOffline = () => {\n      setOnline(false)\n    }\n    window.addEventListener('online', goOnline)\n    window.addEventListener('offline', goOffline)\n\n    return () => {\n      window.removeEventListener('online', goOnline)\n      window.removeEventListener('offline', goOffline)\n    }\n  }, [])\n\n  useEffect(() => {\n    const { enabled, interval, url, timeout } = getPollingConfig(polling)\n    let pollingId: NodeJS.Timeout = null\n    if (enabled) {\n      pollingId = setInterval(() => {\n        ping({ url, timeout }).then((result: boolean) => {\n          setOnline(result)\n        })\n      }, interval)\n    }\n\n    return () => {\n      if (pollingId) {\n        clearInterval(pollingId)\n      }\n    }\n  }, [polling])\n\n  return {\n    online,\n    offline: !online\n  }\n}\n\nconst ping = ({ url, timeout }: { url: string; timeout: number }) => {\n  return new Promise(resolve => {\n    const isOnline = () => resolve(true)\n    const isOffline = () => resolve(false)\n\n    const xhr = new XMLHttpRequest()\n\n    xhr.onerror = isOffline\n    xhr.ontimeout = isOffline\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n        if (xhr.status) {\n          isOnline()\n        } else {\n          isOffline()\n        }\n      }\n    }\n\n    xhr.open('HEAD', url)\n    xhr.timeout = timeout\n    xhr.send()\n  })\n}\n\nconst getPollingConfig = (polling: PollingConfig | boolean): PollingConfig => {\n  const defaultPollingConfig = {\n    enabled: inBrowser && unsupportedUserAgentsPattern.test(navigator.userAgent),\n    url: 'https://checkip.amazonaws.com/',\n    timeout: 5000,\n    interval: 5000\n  }\n\n  switch (polling) {\n    case true:\n      return defaultPollingConfig\n    case false:\n      return { enabled: false }\n    default:\n      return Object.assign({}, defaultPollingConfig, polling)\n  }\n}\n","import { useEffect } from 'react'\nimport useConnection, { UseConnectionArgs } from './useConnection'\n\nexport interface OnlineProps extends UseConnectionArgs {\n  children: JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Online({ children, polling, onChange }: OnlineProps): JSX.Element {\n  const { online } = useConnection({ polling })\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  return online ? children : null\n}\n","import { useEffect } from 'react'\nimport useConnection, { UseConnectionArgs } from './useConnection'\n\nexport interface OfflineProps extends UseConnectionArgs {\n  children: JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Offline({ children, polling, onChange }: OfflineProps): JSX.Element {\n  const { online } = useConnection({ polling })\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  return !online ? children : null\n}\n","import { useEffect } from 'react'\nimport useConnection, { UseConnectionArgs } from './useConnection'\n\nexport interface DetectorProps extends UseConnectionArgs {\n  children: (online: boolean) => JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Detector({ children, polling, onChange }: DetectorProps) {\n  const { online } = useConnection({ polling })\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  if (children) {\n    return children(online)\n  }\n\n  return null\n}\n"],"names":["inBrowser","navigator","unsupportedUserAgentsPattern","useConnection","polling","useState","onLine","online","setOnline","useEffect","goOnline","goOffline","window","addEventListener","removeEventListener","getPollingConfig","enabled","interval","url","timeout","pollingId","setInterval","ping","then","result","clearInterval","offline","Promise","resolve","isOnline","isOffline","xhr","XMLHttpRequest","onerror","ontimeout","onreadystatechange","readyState","HEADERS_RECEIVED","status","open","send","defaultPollingConfig","test","userAgent","Object","assign","Online","children","onChange","Offline","Detector"],"mappings":"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"}