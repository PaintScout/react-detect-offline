{"version":3,"file":"react-detect-offline.cjs.production.min.js","sources":["../src/useConnection.ts","../src/Detector.tsx","../src/Offline.tsx","../src/Online.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst inBrowser = typeof navigator !== 'undefined'\n\n// these browsers don't fully support navigator.onLine, so we need to use a polling backup\nconst unsupportedUserAgentsPattern = /Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/\n\nexport interface PollingConfig {\n  enabled?: boolean\n  url?: string\n  interval?: number\n  timeout?: number\n}\n\nexport interface UseConnectionArgs {\n  polling?: PollingConfig | boolean\n}\n\nexport default function useConnection({ polling }: UseConnectionArgs = {}) {\n  const [online, setOnline] = useState(inBrowser && typeof navigator.onLine === 'boolean' ? navigator.onLine : true)\n\n  useEffect(() => {\n    const goOnline = () => {\n      setOnline(true)\n    }\n    const goOffline = () => {\n      setOnline(false)\n    }\n    window.addEventListener('online', goOnline)\n    window.addEventListener('offline', goOffline)\n\n    return () => {\n      window.removeEventListener('online', goOnline)\n      window.removeEventListener('offline', goOffline)\n    }\n  }, [])\n\n  useEffect(() => {\n    const { enabled, interval, url, timeout } = getPollingConfig(polling)\n    let pollingId: NodeJS.Timeout = null\n    if (enabled) {\n      pollingId = setInterval(() => {\n        ping({ url, timeout }).then((result: boolean) => {\n          setOnline(result)\n        })\n      }, interval)\n    }\n\n    return () => {\n      if (pollingId) {\n        clearInterval(pollingId)\n      }\n    }\n  }, [polling])\n\n  return {\n    online,\n    offline: !online\n  }\n}\n\nconst ping = ({ url, timeout }: { url: string; timeout: number }) => {\n  return new Promise(resolve => {\n    const isOnline = () => resolve(true)\n    const isOffline = () => resolve(false)\n\n    const xhr = new XMLHttpRequest()\n\n    xhr.onerror = isOffline\n    xhr.ontimeout = isOffline\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n        if (xhr.status) {\n          isOnline()\n        } else {\n          isOffline()\n        }\n      }\n    }\n\n    xhr.open('HEAD', url)\n    xhr.timeout = timeout\n    xhr.send()\n  })\n}\n\nconst getPollingConfig = (polling: PollingConfig | boolean): PollingConfig => {\n  const defaultPollingConfig = {\n    enabled: inBrowser && unsupportedUserAgentsPattern.test(navigator.userAgent),\n    url: 'https://ipv4.icanhazip.com/',\n    timeout: 5000,\n    interval: 5000\n  }\n\n  switch (polling) {\n    case true:\n      return defaultPollingConfig\n    case false:\n      return { enabled: false }\n    default:\n      return Object.assign({}, defaultPollingConfig, polling)\n  }\n}\n","import { useEffect } from 'react'\nimport useConnection, { UseConnectionArgs } from './useConnection'\n\nexport interface DetectorProps extends UseConnectionArgs {\n  children: (online: boolean) => JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Detector({ children, polling, onChange }: DetectorProps) {\n  const { online } = useConnection({ polling })\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  if (children) {\n    return children(online)\n  }\n\n  return null\n}\n","import { useEffect } from 'react'\nimport useConnection, { UseConnectionArgs } from './useConnection'\n\nexport interface OfflineProps extends UseConnectionArgs {\n  children: JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Offline({ children, polling, onChange }: OfflineProps): JSX.Element {\n  const { online } = useConnection({ polling })\n\n  useEffect(\n    () => {\n      if (onChange) {\n        onChange(online)\n      }\n    },\n    [online]\n  )\n\n  return !online ? children : null\n}\n","import { useEffect } from 'react'\nimport useConnection, { UseConnectionArgs } from './useConnection'\n\nexport interface OnlineProps extends UseConnectionArgs {\n  children: JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Online({ children, polling, onChange }: OnlineProps): JSX.Element {\n  const { online } = useConnection({ polling })\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  return online ? children : null\n}\n"],"names":["inBrowser","navigator","unsupportedUserAgentsPattern","useConnection","polling","useState","onLine","online","setOnline","useEffect","goOnline","goOffline","window","addEventListener","removeEventListener","getPollingConfig","url","timeout","pollingId","enabled","setInterval","ping","then","result","interval","clearInterval","offline","Promise","resolve","isOffline","xhr","XMLHttpRequest","onerror","ontimeout","onreadystatechange","readyState","HEADERS_RECEIVED","status","open","send","defaultPollingConfig","test","userAgent","Object","assign","children","onChange"],"mappings":"oCAEMA,EAAiC,oBAAdC,UAGnBC,EAA+B,0DAabC,SAAgBC,cAA+B,MAA/BA,UACVC,YAASL,GAAyC,kBAArBC,UAAUK,QAAuBL,UAAUK,QAA7FC,OAAQC,cAEfC,YAAU,eACFC,EAAW,WACfF,GAAU,IAENG,EAAY,WAChBH,GAAU,WAEZI,OAAOC,iBAAiB,SAAUH,GAClCE,OAAOC,iBAAiB,UAAWF,GAE5B,WACLC,OAAOE,oBAAoB,SAAUJ,GACrCE,OAAOE,oBAAoB,UAAWH,KAEvC,IAEHF,YAAU,iBACoCM,EAAiBX,GAAlCY,IAAAA,IAAKC,IAAAA,QAC5BC,EAA4B,cADxBC,UAGND,EAAYE,YAAY,WACtBC,EAAK,CAAEL,IAAAA,EAAKC,QAAAA,IAAWK,KAAK,SAACC,GAC3Bf,EAAUe,QALCC,WAUV,WACDN,GACFO,cAAcP,KAGjB,CAACd,IAEG,CACLG,OAAAA,EACAmB,SAAUnB,GAId,IAAMc,EAAO,gBAAGL,IAAAA,IAAKC,IAAAA,eACZ,IAAIU,QAAQ,SAAAC,OAEXC,EAAY,kBAAMD,GAAQ,IAE1BE,EAAM,IAAIC,eAEhBD,EAAIE,QAAUH,EACdC,EAAIG,UAAYJ,EAChBC,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeL,EAAIM,mBACrBN,EAAIO,OATWT,GAAQ,GAYzBC,MAKNC,EAAIQ,KAAK,OAAQtB,GACjBc,EAAIb,QAAUA,EACda,EAAIS,UAIFxB,EAAmB,SAACX,OAClBoC,EAAuB,CAC3BrB,QAASnB,GAAaE,EAA6BuC,KAAKxC,UAAUyC,WAClE1B,IAAK,8BACLC,QAAS,IACTO,SAAU,YAGJpB,QACD,SACIoC,OACJ,QACI,CAAErB,SAAS,kBAEXwB,OAAOC,OAAO,GAAIJ,EAAsBpC,sCC5FlByC,IAAAA,SAAmBC,IAAAA,SAC5CvC,EAAWJ,EAAc,CAAEC,UADQA,UACnCG,cAERE,YAAU,WACJqC,GACFA,EAASvC,IAEV,CAACA,IAEAsC,EACKA,EAAStC,GAGX,sCCbyBsC,IAAAA,SAAmBC,IAAAA,SAC3CvC,EAAWJ,EAAc,CAAEC,UADOA,UAClCG,cAERE,YACE,WACMqC,GACFA,EAASvC,IAGb,CAACA,IAGKA,EAAoB,KAAXsC,kCCZcA,IAAAA,SAAmBC,IAAAA,SAC1CvC,EAAWJ,EAAc,CAAEC,UADMA,UACjCG,cAERE,YAAU,WACJqC,GACFA,EAASvC,IAEV,CAACA,IAEGA,EAASsC,EAAW"}