{"version":3,"file":"react-detect-offline.cjs.production.min.js","sources":["../src/ConnectionContext.ts","../src/useConnection.ts","../src/ConnectionProvider.tsx","../src/Detector.tsx","../src/Offline.tsx","../src/Online.tsx"],"sourcesContent":["import React from 'react'\n\n/////////////////// Context ///////////////////////////\nexport interface ConnectionContextValue {\n  online?: boolean\n}\n\nexport const ConnectionContext = React.createContext<ConnectionContextValue>({ online: true })\n","import { ConnectionContext } from './ConnectionContext'\nimport { useContext } from 'react'\n\nexport function useConnection() {\n  return useContext(ConnectionContext)\n}\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { ConnectionContext } from './ConnectionContext'\n\nconst inBrowser = typeof navigator !== 'undefined'\n\n// these browsers don't fully support navigator.onLine, so we need to use a polling backup\nconst unsupportedUserAgentsPattern = /Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/\n\nexport interface PollingConfig {\n  enabled?: boolean\n  url?: string\n  interval?: number\n  timeout?: number\n}\n\nexport interface ConnectionProviderProps {\n  poll?: boolean\n  config?: PollingConfig\n  children: React.ReactNode\n}\n\nconst ConnectionProvider: React.FC<ConnectionProviderProps> = ({ poll = true, config, children }) => {\n  const [online, setOnline] = useState(inBrowser && typeof navigator.onLine === 'boolean' ? navigator.onLine : true)\n\n  useEffect(() => {\n    const goOnline = () => {\n      setOnline(true)\n    }\n    const goOffline = () => {\n      setOnline(false)\n    }\n    window.addEventListener('online', goOnline)\n    window.addEventListener('offline', goOffline)\n\n    return () => {\n      window.removeEventListener('online', goOnline)\n      window.removeEventListener('offline', goOffline)\n    }\n  }, [])\n\n  useEffect(() => {\n    const { enabled, interval, url, timeout } = getPollingConfig(poll, config)\n    let pollingId: NodeJS.Timeout = null\n\n    if (enabled) {\n      pollingId = setInterval(() => {\n        ping({ url, timeout }).then((result: boolean) => {\n          setOnline(result)\n        })\n      }, interval)\n    }\n\n    return () => {\n      if (pollingId) {\n        clearInterval(pollingId)\n      }\n    }\n  }, [poll])\n\n  const value = useMemo(() => ({ online }), [online])\n\n  return <ConnectionContext.Provider value={value}>{children}</ConnectionContext.Provider>\n}\n\nconst ping = ({ url, timeout }: { url: string; timeout: number }) => {\n  return new Promise(resolve => {\n    const isOnline = () => resolve(true)\n    const isOffline = () => resolve(false)\n\n    const xhr = new XMLHttpRequest()\n\n    xhr.onerror = isOffline\n    xhr.ontimeout = isOffline\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n        if (xhr.status) {\n          isOnline()\n        } else {\n          isOffline()\n        }\n      }\n    }\n\n    xhr.open('GET', url)\n    xhr.timeout = timeout\n    xhr.send()\n  })\n}\n\nconst getPollingConfig = (polling: boolean, config: PollingConfig): PollingConfig => {\n  const defaultPollingConfig = {\n    enabled: inBrowser && unsupportedUserAgentsPattern.test(navigator.userAgent),\n    url: 'https://api.paintscout.com/',\n    timeout: 5000,\n    interval: 5000\n  }\n\n  const pollingConfig = {\n    ...defaultPollingConfig,\n    ...(config ? config : {})\n  }\n\n  switch (polling) {\n    case true:\n      return pollingConfig\n    case false:\n      return { enabled: false }\n    default:\n      return Object.assign({}, pollingConfig, polling)\n  }\n}\n\nexport default ConnectionProvider\n","import { useEffect } from 'react'\nimport { useConnection } from './useConnection'\n\nexport interface DetectorProps {\n  children: (online: boolean) => JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Detector({ children, onChange }: DetectorProps) {\n  const { online } = useConnection()\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  if (children) {\n    return children(online)\n  }\n\n  return null\n}\n","import { useEffect } from 'react'\nimport { useConnection } from './useConnection'\n\nexport interface OfflineProps {\n  children: JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Offline({ children, onChange }: OfflineProps): JSX.Element {\n  const { online } = useConnection()\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  return !online ? children : null\n}\n","import { useEffect } from 'react'\nimport { useConnection } from './useConnection'\n\nexport interface OnlineProps {\n  children: JSX.Element\n  onChange?: (online: boolean) => any\n}\n\nexport default function Online({ children, onChange }: OnlineProps): JSX.Element {\n  const { online } = useConnection()\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(online)\n    }\n  }, [online])\n\n  return online ? children : null\n}\n"],"names":["ConnectionContext","React","createContext","online","useConnection","useContext","inBrowser","navigator","unsupportedUserAgentsPattern","poll","config","children","useState","onLine","setOnline","useEffect","goOnline","goOffline","window","addEventListener","removeEventListener","polling","pollingConfig","enabled","test","userAgent","url","timeout","interval","Object","assign","getPollingConfig","pollingId","setInterval","Promise","resolve","isOffline","xhr","XMLHttpRequest","onerror","ontimeout","onreadystatechange","readyState","HEADERS_RECEIVED","status","open","send","ping","then","result","clearInterval","value","useMemo","Provider","onChange"],"mappings":"6FAOaA,EAAoBC,EAAMC,cAAsC,CAAEC,QAAQ,aCJvEC,WACPC,aAAWL,kNCDpB,IAAMM,EAAiC,oBAAdC,UAGnBC,EAA+B,wGAeyB,oBAAGC,KAAAA,gBAAaC,IAAAA,OAAQC,IAAAA,WACxDC,YAASN,GAAyC,kBAArBC,UAAUM,QAAuBN,UAAUM,QAA7FV,OAAQW,OAEfC,YAAU,eACFC,EAAW,WACfF,GAAU,IAENG,EAAY,WAChBH,GAAU,WAEZI,OAAOC,iBAAiB,SAAUH,GAClCE,OAAOC,iBAAiB,UAAWF,GAE5B,WACLC,OAAOE,oBAAoB,SAAUJ,GACrCE,OAAOE,oBAAoB,UAAWH,KAEvC,IAEHF,YAAU,iBAiDa,SAACM,EAAkBX,OAQpCY,OAPuB,CAC3BC,QAASjB,GAAaE,EAA6BgB,KAAKjB,UAAUkB,WAClEC,IAAK,8BACLC,QAAS,IACTC,SAAU,QAKNlB,GAAkB,WAGhBW,QACD,SACIC,OACJ,QACI,CAAEC,SAAS,kBAEXM,OAAOC,OAAO,GAAIR,EAAeD,IAnEEU,CAAiBtB,EAAMC,GAAxCgB,IAAAA,IAAKC,IAAAA,QAC5BK,EAA4B,cADxBT,UAINS,EAAYC,YAAY,YAmBjB,gBAAGP,IAAAA,IAAKC,IAAAA,eACZ,IAAIO,QAAQ,SAAAC,OAEXC,EAAY,kBAAMD,GAAQ,IAE1BE,EAAM,IAAIC,eAEhBD,EAAIE,QAAUH,EACdC,EAAIG,UAAYJ,EAChBC,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeL,EAAIM,mBACrBN,EAAIO,OATWT,GAAQ,GAYzBC,MAKNC,EAAIQ,KAAK,MAAOnB,GAChBW,EAAIV,QAAUA,EACdU,EAAIS,UAvCAC,CAAK,CAAErB,IAAAA,EAAKC,QAAAA,IAAWqB,KAAK,SAACC,GAC3BnC,EAAUmC,QANCrB,WAWV,WACDI,GACFkB,cAAclB,KAGjB,CAACvB,QAEE0C,EAAQC,UAAQ,iBAAO,CAAEjD,OAAAA,IAAW,CAACA,WAEpCF,gBAACD,EAAkBqD,UAASF,MAAOA,GAAQxC,qCCrDjBA,IAAAA,SAAU2C,IAAAA,SACnCnD,EAAWC,IAAXD,cAERY,YAAU,WACJuC,GACFA,EAASnD,IAEV,CAACA,IAEAQ,EACKA,EAASR,GAGX,sCCbyBQ,IAAAA,SAAU2C,IAAAA,SAClCnD,EAAWC,IAAXD,cAERY,YAAU,WACJuC,GACFA,EAASnD,IAEV,CAACA,IAEIA,EAAoB,KAAXQ,kCCTcA,IAAAA,SAAU2C,IAAAA,SACjCnD,EAAWC,IAAXD,cAERY,YAAU,WACJuC,GACFA,EAASnD,IAEV,CAACA,IAEGA,EAASQ,EAAW"}