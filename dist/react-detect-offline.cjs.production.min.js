'use strict'
var n,
  e = require('react'),
  t = (n = e) && 'object' == typeof n && 'default' in n ? n.default : n,
  o = t.createContext({ online: !0 })
function r() {
  return e.useContext(o)
}
var i = 'undefined' != typeof navigator,
  u = /Windows.*Chrome|Windows.*Firefox|Linux.*Chrome/
;(exports.ConnectionContext = o),
  (exports.ConnectionProvider = function(n) {
    var r = n.poll,
      a = void 0 === r || r,
      c = n.children,
      f = e.useState(!i || 'boolean' != typeof navigator.onLine || navigator.onLine),
      l = f[0],
      s = f[1]
    e.useEffect(function() {
      var n = function() {
          s(!0)
        },
        e = function() {
          s(!1)
        }
      return (
        window.addEventListener('online', n),
        window.addEventListener('offline', e),
        function() {
          window.removeEventListener('online', n), window.removeEventListener('offline', e)
        }
      )
    }, []),
      e.useEffect(
        function() {
          var n = (function(n) {
              var e = {
                enabled: i && u.test(navigator.userAgent),
                url: 'https://app.paintscout.com/api/',
                timeout: 5e3,
                interval: 5e3
              }
              switch (n) {
                case !0:
                  return e
                case !1:
                  return { enabled: !1 }
                default:
                  return Object.assign({}, e, n)
              }
            })(a),
            e = n.url,
            t = n.timeout,
            o = null
          return (
            n.enabled &&
              (o = setInterval(function() {
                ;(function(n) {
                  var e = n.url,
                    t = n.timeout
                  return new Promise(function(n) {
                    var o = function() {
                        return n(!1)
                      },
                      r = new XMLHttpRequest()
                    ;(r.onerror = o),
                      (r.ontimeout = o),
                      (r.onreadystatechange = function() {
                        r.readyState === r.HEADERS_RECEIVED && (r.status ? n(!0) : o())
                      }),
                      r.open('HEAD', e),
                      (r.timeout = t),
                      r.send()
                  })
                })({ url: e, timeout: t }).then(function(n) {
                  s(n)
                })
              }, n.interval)),
            function() {
              o && clearInterval(o)
            }
          )
        },
        [a]
      )
    var v = e.useMemo(
      function() {
        return { online: l }
      },
      [l]
    )
    return t.createElement(o.Provider, { value: v }, c)
  }),
  (exports.Detector = function(n) {
    var t = n.children,
      o = n.onChange,
      i = r().online
    return (
      e.useEffect(
        function() {
          o && o(i)
        },
        [i]
      ),
      t ? t(i) : null
    )
  }),
  (exports.Offline = function(n) {
    var t = n.children,
      o = n.onChange,
      i = r().online
    return (
      e.useEffect(
        function() {
          o && o(i)
        },
        [i]
      ),
      i ? null : t
    )
  }),
  (exports.Online = function(n) {
    var t = n.children,
      o = n.onChange,
      i = r().online
    return (
      e.useEffect(
        function() {
          o && o(i)
        },
        [i]
      ),
      i ? t : null
    )
  }),
  (exports.useConnection = r)
//# sourceMappingURL=react-detect-offline.cjs.production.min.js.map
